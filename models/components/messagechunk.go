// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FinishReason string

const (
	FinishReasonStop          FinishReason = "stop"
	FinishReasonLength        FinishReason = "length"
	FinishReasonContentFilter FinishReason = "content_filter"
)

func (e FinishReason) ToPointer() *FinishReason {
	return &e
}

func (e *FinishReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stop":
		fallthrough
	case "length":
		fallthrough
	case "content_filter":
		*e = FinishReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FinishReason: %v", v)
	}
}

type MessageChunk struct {
	ChatSessionID *string       `json:"chat_session_id,omitempty"`
	ContentChunk  string        `json:"content_chunk"`
	FinishReason  *FinishReason `json:"finish_reason,omitempty"`
}

func (o *MessageChunk) GetChatSessionID() *string {
	if o == nil {
		return nil
	}
	return o.ChatSessionID
}

func (o *MessageChunk) GetContentChunk() string {
	if o == nil {
		return ""
	}
	return o.ContentChunk
}

func (o *MessageChunk) GetFinishReason() *FinishReason {
	if o == nil {
		return nil
	}
	return o.FinishReason
}
