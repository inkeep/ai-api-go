// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/inkeep/ai-api-go/models/components"
	"github.com/inkeep/ai-api-go/types/stream"
	"net/http"
)

type ContinueRequest struct {
	ChatSessionID                          string                                            `pathParam:"style=simple,explode=false,name=chat_session_id"`
	ContinueChatSessionWithChatResultInput components.ContinueChatSessionWithChatResultInput `request:"mediaType=application/json"`
}

func (o *ContinueRequest) GetChatSessionID() string {
	if o == nil {
		return ""
	}
	return o.ChatSessionID
}

func (o *ContinueRequest) GetContinueChatSessionWithChatResultInput() components.ContinueChatSessionWithChatResultInput {
	if o == nil {
		return components.ContinueChatSessionWithChatResultInput{}
	}
	return o.ContinueChatSessionWithChatResultInput
}

type ContinueResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful Response
	ChatResult *components.ChatResult
	// Successful Response
	ChatResultStream *stream.EventStream[components.ChatResultStream]
}

func (o *ContinueResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ContinueResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ContinueResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ContinueResponse) GetChatResult() *components.ChatResult {
	if o == nil {
		return nil
	}
	return o.ChatResult
}

func (o *ContinueResponse) GetChatResultStream() *stream.EventStream[components.ChatResultStream] {
	if o == nil {
		return nil
	}
	return o.ChatResultStream
}
